plugins {
	id 'fabric-loom' version '1.9-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"narrator-test" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	// Minecraft and Fabric dependencies
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// FreeTTS dependency (bundled with the mod)
	implementation include('net.sf.sociaal:freetts:1.2.2')

	// OkHttp dependency (bundled with the mod)
	implementation include('com.squareup.okhttp3:okhttp:4.9.3')

	// Okio dependency (required for OkHttp)
	implementation include('com.squareup.okio:okio:3.2.0')

	// Kotlin standard library (required for OkHttp 4.x)
	implementation include('org.jetbrains.kotlin:kotlin-stdlib:1.8.22')

	// JSON dependency (bundled with the mod)
	implementation include('org.json:json:20210307')

	// java-dotenv dependency (bundled with the mod)
	implementation include('io.github.cdimascio:java-dotenv:5.2.2')
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
}